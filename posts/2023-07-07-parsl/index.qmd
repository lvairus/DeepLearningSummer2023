---
title: "Intro to Parsl"
author: "Laura Vairus"
date: "07-07-2023"
---

Parsl is a python package that lets you run multiple functions at once (in parallel).

Parsl automatically finds all the processors available for use and passes in your function calls to them so that they can be run asyncronously (at the same time without interrupting your main workflow).

So say you have a normal python function you want to run but it takes 10 seconds to finish. If you want to call that function normally you'll have to wait until it's finished running before you can do anything else.

Now say you want to run that function 100 times. That'll take 17 minutes to finish running before you can do anything else.

Parsl can help shorten the time it takes for all 100 runs to finish AND let you work on other code while you wait for that.

Vocab: - app: parsl instance of your function - run in parallel: run multiple functions at the same time - run asyncronously: run a function at the same time as others without interrupting main workflow - submitting a job: calling a function that has a parsl decorator

# Using Parcel

The following function takes some text and prints it out after one second

```
def function1(text):
  import time
  time.sleep(1)
  print(text)
  return

```

The following takes 10 seconds to finish running

```
for i in range(10):
  function1(i)
  
```

To use parsl to run this in parallel, all we have to do is import it and add a decorator to our function

```
import parsl
from parsl.app.app import python_app

@python_app
def function2(text):
  import time
  time.sleep(1)
  print(text)
  return

```

Using this new function, the following takes less time to finish (the specific time depends on how many processors(?) you have available to use in parallel)

```
for i in range(10):
  function2(i)
  
```

# AppFutures
